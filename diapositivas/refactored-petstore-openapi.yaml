openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  description: A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: http://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://petstore.swagger.io/api
paths:
  /pets:
    get:
      description: |
        Returns all pets from the system that the user has access to
      operationId: findPets
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
              examples:
                multiplePets:
                  summary: A list of pets
                  value:
                    - id: 1
                      name: Fluffy
                      tag: cat
                    - id: 2
                      name: Buddy
                      tag: dog
                    - id: 3
                      name: Tweety
                      tag: bird
                    - id: 4
                      name: Laika
                      tag: dog
                    - id: 5
                      name: Paco
                      tag: bird
                singlePet:
                  summary: A single pet
                  value:
                    - id: 1
                      name: Fluffy
                      tag: cat
                emptyList:
                  summary: An empty list
                  value: []
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new pet in the store
      operationId: addPet
      requestBody:
        description: Pet to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPet'
            examples:
              newCat:
                summary: A new cat
                value:
                  name: Whiskers
                  tag: cat
              newDog:
                summary: A new dog
                value:
                  name: Rex
                  tag: dog
              newBird:
                summary: A new bird
                value:
                  name: Polly
                  tag: bird
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
              examples:
                newCat:
                  summary: Created cat
                  value:
                    id: 1
                    name: Whiskers
                    tag: cat
                newDog:
                  summary: Created dog
                  value:
                    id: 2
                    name: Rex
                    tag: dog
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /pets/{id}:
    get:
      description: Returns a user based on a single ID, if the user does not have access to the pet
      operationId: find pet by id
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
              examples:
                cat:
                  summary: A cat
                  value:
                    id: 1
                    name: Fluffy
                    tag: cat
                dog:
                  summary: A dog
                  value:
                    id: 2
                    name: Buddy
                    tag: dog
                bird:
                  summary: A bird
                  value:
                    id: 3
                    name: Tweety
                    tag: bird
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: deletes a single pet based on the ID supplied
      operationId: deletePet
      parameters:
        - name: id
          in: path
          description: ID of pet to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: pet deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Pet:
      allOf:
        - $ref: '#/components/schemas/NewPet'
        - type: object
          required:
          - id
          properties:
            id:
              type: integer
              format: int64

    NewPet:
      type: object
      required:
        - name  
      properties:
        name:
          type: string
        tag:
          type: string    

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
